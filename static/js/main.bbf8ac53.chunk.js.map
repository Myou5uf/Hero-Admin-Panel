{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","url","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","a","heroesSlice","createSlice","name","reducers","heroCreate","state","action","addOne","payload","heroDelete","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","filteredHeroesSelector","createSelector","filters","activeFilter","filter","hero","element","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","onDeleteHero","className","src","alt","style","objectFit","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","error","arr","elements","length","CSSTransition","timeout","classNames","map","TransitionGroup","component","filtersAdapter","filtersLoadingStatus","fetchFilters","filtersSlice","filtersChanged","stringMiddleware","getState","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","setName","setDescription","setElement","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","addNewHero","htmlFor","required","placeholder","value","onChange","target","height","hidden","label","HeroesFilters","filtersBtns","active","renderFilters","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbf8ac53.chunk.js","sourcesContent":["export const useHttp = () => {\n\tconst request = async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\n\t\ttry {\n\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\t\t\treturn data;\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\treturn { request };\n};","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst heroesAdapter = createEntityAdapter();\r\nconst initialState = heroesAdapter.getInitialState({\r\n\theroesLoadingStatus: \"idle\",\r\n});\r\n\r\nexport const fetchHeroes = createAsyncThunk(\"heroes/fetchHeroes\", async () => {\r\n\tconst { request } = useHttp();\r\n\treturn await request(\"http://localhost:3001/heroes\");\r\n});\r\n\r\nconst heroesSlice = createSlice({\r\n\tname: \"heroes\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\theroCreate: (state, action) => {\r\n\t\t\t// state.heroes.push(action.payload);\r\n\t\t\theroesAdapter.addOne(state, action.payload);\r\n\t\t},\r\n\t\theroDelete: (state, action) => {\r\n\t\t\theroesAdapter.removeOne(state, action.payload);\r\n\t\t\t// state.heroes = state.heroes.filter((hero) => hero.id !== action.payload);\r\n\t\t},\r\n\t},\r\n\textraReducers: (builder) => {\r\n\t\tbuilder\r\n\t\t\t.addCase(fetchHeroes.pending, (state) => {\r\n\t\t\t\tstate.heroesLoadingStatus = \"loading\";\r\n\t\t\t})\r\n\t\t\t.addCase(fetchHeroes.fulfilled, (state, action) => {\r\n\t\t\t\tstate.heroesLoadingStatus = \"idle\";\r\n\t\t\t\t// state.heroes = action.payload;\r\n\t\t\t\theroesAdapter.setAll(state, action.payload);\r\n\t\t\t})\r\n\t\t\t.addCase(fetchHeroes.rejected, (state) => {\r\n\t\t\t\tstate.heroesLoadingStatus = \"error\";\r\n\t\t\t})\r\n\t\t\t.addDefaultCase(() => {});\r\n\t},\r\n});\r\n\r\nconst { actions, reducer } = heroesSlice;\r\n\r\nexport default reducer;\r\n\r\nconst { selectAll } = heroesAdapter.getSelectors((state) => state.heroes);\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n\t(state) => state.filters.activeFilter,\r\n\tselectAll,\r\n\t(filter, heroes) => (filter === \"all\" ? heroes : heroes.filter((hero) => hero.element === filter))\r\n);\r\n\r\nexport const { heroesFetching, heroesFetched, heroesFetchingError, heroCreate, heroDelete } = actions;\r\n","const HeroesListItem = ({ name, description, element, onDeleteHero }) => {\n\tlet elementClassName;\n\n\tswitch (element) {\n\t\tcase \"fire\":\n\t\t\telementClassName = \"bg-danger bg-gradient\";\n\t\t\tbreak;\n\t\tcase \"water\":\n\t\t\telementClassName = \"bg-primary bg-gradient\";\n\t\t\tbreak;\n\t\tcase \"wind\":\n\t\t\telementClassName = \"bg-success bg-gradient\";\n\t\t\tbreak;\n\t\tcase \"earth\":\n\t\t\telementClassName = \"bg-secondary bg-gradient\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\telementClassName = \"bg-warning bg-gradient\";\n\t}\n\n\treturn (\n\t\t<li className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n\t\t\t<img\n\t\t\t\tsrc=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\n\t\t\t\tclassName=\"img-fluid w-25 d-inline\"\n\t\t\t\talt=\"unknown hero\"\n\t\t\t\tstyle={{ objectFit: \"cover\" }}\n\t\t\t/>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h3 className=\"card-title\">{name}</h3>\n\t\t\t\t<p className=\"card-text\">{description}</p>\n\t\t\t</div>\n\t\t\t<span\n\t\t\t\tonClick={onDeleteHero}\n\t\t\t\tclassName=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn-close btn-close\"\n\t\t\t\t\taria-label=\"Close\"></button>\n\t\t\t</span>\n\t\t</li>\n\t);\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { heroDelete, fetchHeroes, filteredHeroesSelector } from \"./heroesSlice\";\n// import { fetchHeroes } from \"../../actions\";\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from \"../spinner/Spinner\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./HeroesList.scss\";\n\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n\t\n\n\tconst filteredHeroes = useSelector(filteredHeroesSelector);\n\tconst heroesLoadingStatus = useSelector((state) => state.heroes.heroesLoadingStatus);\n\n\tconst dispatch = useDispatch();\n\tconst { request } = useHttp();\n\n\tuseEffect(() => {\n\t\t// dispatch(fetchHeroes(request));\n\t\tdispatch(fetchHeroes());\n\t}, []);\n\n\tconst onDeleteHero = useCallback(\n\t\t(id) => {\n\t\t\trequest(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n\t\t\t\t.then((data) => console.log(data, \"Deleted\"))\n\t\t\t\t.then(dispatch(heroDelete(id)))\n\t\t\t\t.catch((error) => console.log(error));\n\t\t},\n\t\t[request]\n\t);\n\n\tif (heroesLoadingStatus === \"loading\") {\n\t\treturn <Spinner />;\n\t} else if (heroesLoadingStatus === \"error\") {\n\t\treturn <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n\t}\n\n\tconst renderHeroesList = (arr) => {\n\t\tif (arr.length === 0) {\n\t\t\treturn (\n\t\t\t\t<CSSTransition\n\t\t\t\t\ttimeout={0}\n\t\t\t\t\tclassNames=\"hero\">\n\t\t\t\t\t<h5 className=\"text-center mt-5\">Героев пока нет</h5>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t}\n\n\t\treturn arr.map(({ id, name, description, element }) => (\n\t\t\t<CSSTransition\n\t\t\t\tkey={id}\n\t\t\t\ttimeout={500}\n\t\t\t\tclassNames=\"card\">\n\t\t\t\t<HeroesListItem\n\t\t\t\t\tname={name}\n\t\t\t\t\tdescription={description}\n\t\t\t\t\telement={element}\n\t\t\t\t\tonDeleteHero={() => onDeleteHero(id)}\n\t\t\t\t/>\n\t\t\t</CSSTransition>\n\t\t));\n\t};\n\n\tconst elements = renderHeroesList(filteredHeroes);\n\treturn <TransitionGroup component=\"ul\">{elements}</TransitionGroup>;\n};\n\nexport default HeroesList;\n","import { createAsyncThunk, createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\nconst initialState = filtersAdapter.getInitialState({\r\n\tfiltersLoadingStatus: \"idle\",\r\n\tactiveFilter: \"all\",\r\n});\r\n\r\nexport const fetchFilters = createAsyncThunk(\"filters/fetchFilters\", async () => {\r\n\tconst { request } = useHttp();\r\n\treturn await request(\"http://localhost:3001/filters\");\r\n});\r\n\r\nconst filtersSlice = createSlice({\r\n\tname: \"filters\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tfiltersChanged: (state, action) => {\r\n\t\t\tstate.activeFilter = action.payload;\r\n\t\t},\r\n\t},\r\n\textraReducers: (builder) => {\r\n\t\tbuilder\r\n\t\t\t.addCase(fetchFilters.pending, (state) => {\r\n\t\t\t\tstate.filtersLoadingStatus = \"loading\";\r\n\t\t\t})\r\n\t\t\t.addCase(fetchFilters.fulfilled, (state, action) => {\r\n\t\t\t\t// state.filters = action.payload;\r\n\t\t\t\tfiltersAdapter.setAll(state, action.payload);\r\n\t\t\t\tstate.filtersLoadingStatus = \"idle\";\r\n\t\t\t})\r\n\t\t\t.addCase(fetchFilters.rejected, (state) => {\r\n\t\t\t\tstate.filtersLoadingStatus = \"error\";\r\n\t\t\t})\r\n\t\t\t.addDefaultCase(() => {});\r\n\t},\r\n});\r\n\r\nconst { actions, reducer } = filtersSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const { selectAll } = filtersAdapter.getSelectors((state) => state.filters);\r\n\r\nexport const { filtersChanged } = actions;\r\n","// import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n// import thunk from \"redux-thunk\";\n// import heroes from \"../reducers/heroes\";\nimport heroes from \"../components/heroesList/heroesSlice\";\nimport filters from \"../components/heroesFilters/filtersSlice\";\n\nconst stringMiddleware = ({ dispatch, getState }) => {\n\treturn (next) => {\n\t\treturn (action) => {\n\t\t\tif (typeof action === \"string\") {\n\t\t\t\treturn next({\n\t\t\t\t\ttype: action,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn next(action);\n\t\t};\n\t};\n};\n\nconst enhancer = (createStore) => {\n\treturn (...args) => {\n\t\tconst store = createStore(...args);\n\t\tconst oldDispatch = store.dispatch;\n\t\tstore.dispatch = (action) => {\n\t\t\tif (typeof action === \"string\") {\n\t\t\t\treturn oldDispatch({\n\t\t\t\t\ttype: action,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn oldDispatch(action);\n\t\t};\n\n\t\treturn store;\n\t};\n};\n\n// * 1 этап\n// const store = createStore(\n// \tcombineReducers({\n// \t\theroes,\n// \t\tfilters,\n// \t}),\n// \twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n\n// * 2 этап\n// const store = createStore(\n// \tcombineReducers({\n// \t\theroes,\n// \t\tfilters,\n// \t}),\n// \tcompose(enhancer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n// );\n\n// * 3 этап\n// const store = createStore(\n// \tcombineReducers({\n// \t\theroes,\n// \t\tfilters,\n// \t}),\n// \tcompose(applyMiddleware(thunk, stringMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n// );\n\n// * 4 этап c помощью toolkit\nconst store = configureStore({\n\treducer: {\n\t\theroes,\n\t\tfilters,\n\t},\n\tmiddleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(stringMiddleware),\n\tdevTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { heroCreate } from \"../heroesList/heroesSlice\";\nimport { selectAll } from \"../heroesFilters/filtersSlice\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport store from \"../../store\";\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n\tconst [name, setName] = useState(\"\");\n\tconst [description, setDescription] = useState(\"\");\n\tconst [element, setElement] = useState(\"\");\n\tconst { request } = useHttp();\n\tconst filters = selectAll(store.getState());\n\tconst filtersLoadingStatus = useSelector((state) => state.filters.filtersLoadingStatus);\n\tconst dispatch = useDispatch();\n\n\tconst addNewHero = (e) => {\n\t\te.preventDefault();\n\n\t\tif (!element || element === \"Фильтров пока нет\" || element === \"Ошибка загрузки\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newHero = {\n\t\t\tid: uuidv4(),\n\t\t\tname,\n\t\t\tdescription,\n\t\t\telement,\n\t\t};\n\n\t\trequest(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n\t\t\t.then((response) => console.log(response, \"Новый герой создан\"))\n\t\t\t.then(dispatch(heroCreate(newHero)))\n\t\t\t.catch((error) => console.log(\"Произошла ошибка\", error));\n\n\t\tsetName(\"\");\n\t\tsetDescription(\"\");\n\t\tsetElement(\"\");\n\t};\n\n\tconst renderFilterItems = () => {\n\t\tif (filtersLoadingStatus === \"loading\") {\n\t\t\treturn <option>Загрузка элементов</option>;\n\t\t} else if (filtersLoadingStatus === \"error\") return <option>Ошибка загрузки</option>;\n\n\t\tif (!filters.length) {\n\t\t\treturn <option>Фильтров пока нет</option>;\n\t\t}\n\n\t\treturn filters.map((filter) => {\n\t\t\t// eslint-disable-next-line\n\t\t\tif (filter.name === \"all\") return;\n\t\t\treturn (\n\t\t\t\t<option\n\t\t\t\t\tkey={filter.name}\n\t\t\t\t\tvalue={filter.name}>\n\t\t\t\t\t{filter.label}\n\t\t\t\t</option>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tclassName=\"border p-4 shadow-lg rounded\"\n\t\t\tonSubmit={(e) => addNewHero(e)}>\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t<label\n\t\t\t\t\thtmlFor=\"name\"\n\t\t\t\t\tclassName=\"form-label fs-4\">\n\t\t\t\t\tИмя нового героя\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tplaceholder=\"Как меня зовут?\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t<label\n\t\t\t\t\thtmlFor=\"text\"\n\t\t\t\t\tclassName=\"form-label fs-4\">\n\t\t\t\t\tОписание\n\t\t\t\t</label>\n\t\t\t\t<textarea\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"text\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"text\"\n\t\t\t\t\tplaceholder=\"Что я умею?\"\n\t\t\t\t\tstyle={{ height: \"130px\" }}\n\t\t\t\t\tvalue={description}\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t<label\n\t\t\t\t\thtmlFor=\"element\"\n\t\t\t\t\tclassName=\"form-label\">\n\t\t\t\t\tВыбрать элемент героя\n\t\t\t\t</label>\n\t\t\t\t<select\n\t\t\t\t\trequired\n\t\t\t\t\tclassName=\"form-select\"\n\t\t\t\t\tid=\"element\"\n\t\t\t\t\tname=\"element\"\n\t\t\t\t\tvalue={element}\n\t\t\t\t\tonChange={(e) => setElement(e.target.value)}>\n\t\t\t\t\t<option\n\t\t\t\t\t\tvalue=\"\"\n\t\t\t\t\t\thidden>\n\t\t\t\t\t\tЯ владею элементом...\n\t\t\t\t\t</option>\n\t\t\t\t\t{renderFilterItems()}\n\t\t\t\t</select>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"btn btn-primary\">\n\t\t\t\tСоздать\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default HeroesAddForm;\n","// import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { fetchFilters } from \"../../actions\";\nimport { filtersChanged, fetchFilters, selectAll } from \"./filtersSlice\";\nimport classNames from \"classnames\";\nimport Spinner from \"../spinner/Spinner\";\nimport store from \"../../store\";\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nconst HeroesFilters = () => {\n\tconst { filtersLoadingStatus, activeFilter } = useSelector((state) => state.filters);\n\tconst filters = selectAll(store.getState());\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\t// dispatch(fetchFilters(request));\n\t\tdispatch(fetchFilters());\n\t}, []);\n\n\tif (filtersLoadingStatus === \"loading\") {\n\t\treturn <Spinner />;\n\t} else if (filtersLoadingStatus === \"error\") {\n\t\treturn <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n\t}\n\n\tconst renderFilters = (filters) => {\n\t\treturn filters.map((filter) => {\n\t\t\tif (filter.length === 0) {\n\t\t\t\treturn <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>;\n\t\t\t}\n\t\t\tconst className = classNames(\"btn\", filter.className, {\n\t\t\t\tactive: filter.name === activeFilter,\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tkey={filter.name}\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tonClick={() => dispatch(filtersChanged(filter.name))}>\n\t\t\t\t\t{filter.label}\n\t\t\t\t</button>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst filtersBtns = renderFilters(filters);\n\n\treturn (\n\t\t<div className=\"card shadow-lg mt-4\">\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<p className=\"card-text\">Отфильтруйте героев по элементам</p>\n\t\t\t\t<div className=\"btn-group\">{filtersBtns}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HeroesFilters;\n","import HeroesList from \"../heroesList/HeroesList\";\nimport HeroesAddForm from \"../heroesAddForm/HeroesAddForm\";\nimport HeroesFilters from \"../heroesFilters/HeroesFilters\";\n\nimport \"./app.scss\";\n\nconst App = () => {\n\treturn (\n\t\t<main className=\"app\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<HeroesList />\n\t\t\t\t<div className=\"content__interactive\">\n\t\t\t\t\t<HeroesAddForm />\n\t\t\t\t\t<HeroesFilters />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/app/App\";\nimport store from \"./store\";\n\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}